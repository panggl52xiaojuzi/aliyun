apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:alb-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - services
      - pods
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - services/status
      - pods/status
    verbs:
      - update
      - patch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - update
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - update
      - create
      - delete
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
    - update
    - create
    - patch
    - delete
  - apiGroups:
    - alibabacloud.com
    resources:
    - albconfigs
    verbs:
    - get
    - list
    - watch
    - update
    - create
    - patch
    - delete
  - apiGroups:
    - alibabacloud.com
    resources:
    - albconfigs/status
    verbs:
    - update
    - patch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
    - patch      
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alb-ingress-controller
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:alb-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:alb-ingress-controller
subjects:
- kind: ServiceAccount
  name: alb-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alb-ingress-cloud-config
  namespace: kube-system
data:
  cloud-config.conf: |-
    {
        "Global": {

            "serviceBackendType": "eni",

            "routeTableIDs": "",
            "clusterID": "c24b671e9a2b04a1eb5e5c3021629305e"
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: control-plane-alb-c24b671e9a2b04a1eb5e5c3021629305e
    tier: control-plane-alb
  name: alb-ingress-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: control-plane-alb-c24b671e9a2b04a1eb5e5c3021629305e
      tier: control-plane-alb
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: control-plane-alb-c24b671e9a2b04a1eb5e5c3021629305e
        tier: control-plane-alb
    spec:
      serviceAccountName: alb-ingress-controller
      containers:
      - name: alb-ingress-controller
        command:
        - /cloud-controller-manager
        - --cloud-config=/etc/kubernetes/config/cloud-config.conf
        - --enable-controllers="ingress"
        - --leader-election-id=alb
        image: registry-vpc.cn-shanghai.aliyuncs.com/acs/cloud-controller-manager-alb-amd64:1.0.0-aliyun.1
        imagePullPolicy: Always
        env:
        - name: CLUSTER_TYPE
          value: dedicatedk8s
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1200
        readinessProbe:
          failureThreshold: 8
          tcpSocket:
            port: 10258
          initialDelaySeconds: 15
          timeoutSeconds: 15
        livenessProbe:
          failureThreshold: 8
          tcpSocket:
            port: 10258
          initialDelaySeconds: 15
          timeoutSeconds: 15
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: cloud-config
          mountPath: /etc/kubernetes/config
      volumes:
      - name: cloud-config
        configMap:
          name: alb-ingress-cloud-config
          items:
          - key: cloud-config.conf
            path: cloud-config.conf
